openapi: 3.0.1
info:
  title: BaaS API
  version: '2021-05-20T17:25:30Z'
  description: Banking-as-a-Service API
  contact:
    name: PayForward Dev Support
    email: developersupport@payforward.com
  license:
    name: PayForward LLC
servers:
  - url: 'https://{environment}.payforward.com/v1'
    variables:
      environment:
        enum:
          - baas-dev
          - baas-sandbox
          - baas
        default: baas-dev
paths:
  /baas/v1/activatecards:
    description: Errors & Status Codes
    post:
      requestBody:
        description: 'ActivateCards resource activates the card so it can be used. It takes the card number, expiration date and cvv of the card in encrypted format to validate the card and activate it.'
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  required:
                    - personId
                    - cardLastFour
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    cardLastFour:
                      type: string
                      description: last four of the card number to be activated
                      minLength: 4
                      maxLength: 4
              required:
                - requestHeader
                - requestDetails
            examples: {}
          application/xml:
            schema:
              type: object
            examples:
              example-1:
                value:
                  '': string
        required: true
      description: 'Call this API to activate the PayForward issued prepaid debit card [link to card](../../../docs/indexhtml/Index.md#person-data-structure)'
      operationId: post-baas-v1-activatecards
      summary: activatecards
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
      tags:
        - Cards
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      cardData:
                        $ref: ./models/CardData.yaml
                required:
                  - responseHeader
              examples: {}
    parameters: []
  /baas/v1/persons:
    post:
      summary: persons
      operationId: persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      personsData:
                        $ref: ./models/PrivatePersonData.yaml
                required:
                  - responseHeader
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: ../reference/BaaS-oAuth.yaml#/components/parameters/Authorization
      description: BaaS exposes this API to create a new account with PayForward. Retry attempts with the same requestId will be idempotent and will return the previously created account and not create a new one. Pass the Know-Your-Customer (KYC) information and BaaS platform will return the KYC results.
      tags:
        - Persons
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  description: ''
                  additionalProperties: false
                  required:
                    - personId
                    - encryptedPrivatePersonData
                    - termsAccepted
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    encryptedPrivatePersonData:
                      $ref: ./models/EncryptedData.yaml
                    termsAccepted:
                      type: array
                      description: 'Terms accepted by the user. '
                      items:
                        $ref: ./models/TermsAccepted.yaml
                    optIns:
                      type: array
                      description: Opt Ins elected by the user
                      items:
                        $ref: ./models/OptIns.yaml
              required:
                - requestHeader
                - requestDetails
        description: 'Request contains the private person data (see document)  in an encrypted format (see how to encrypt) and creates a person in the system and issues a prepaid debit card after the person passes Know-Your-Customer checks. '
    parameters: []
  /baas/v1/updateCards:
    post:
      summary: updatecards
      operationId: post-baas-v1-updatecards
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      cardData:
                        $ref: ./models/CardData.yaml
                required:
                  - responseHeader
      description: 'Updating the card actions on the card-on-file. Reporting a card as lost/stolen will mark the current card as lost/stolen and a new card will be sent to the customer for activation. '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              x-examples:
                example-1:
                  requestHeader:
                    requestid: string
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  required:
                    - personId
                    - cardAction
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    cardAction:
                      type: string
                      maxLength: 64
                      enum:
                        - lock
                        - lostStolenReplace
                        - unlock
                        - setATMPin
                    atmPin:
                      type: string
                      description: ATM PIN. Will be required if the cardAction is SetATMPin. CONDITIONAL FIELD
                      maxLength: 10
              required:
                - requestHeader
                - requestDetails
        description: ''
      tags:
        - Cards
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/banks:
    post:
      summary: banks
      operationId: post-baas-v1-Banks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    properties:
                      linkId:
                        $ref: ./models/LinkId.yaml
                      bankResponseData:
                        $ref: ./models/BankData.yaml
                required:
                  - responseHeader
      description: Call this API to add or link an external bank account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    nickName:
                      type: string
                      maxLength: 128
                      description: Short name for the bank
                      minLength: 5
                    encryptedBankData:
                      $ref: ./models/EncryptedData.yaml
                  required:
                    - personId
                    - nickName
                    - encryptedBankData
              required:
                - requestHeader
      tags:
        - Banks
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/verifybanks:
    post:
      summary: verifybanks
      operationId: post-baas-v1-verifybanks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responsHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      linkId:
                        $ref: ./models/LinkId.yaml
                      bankResponseData:
                        $ref: ./models/BankData.yaml
                required:
                  - responsHeader
      description: Call this API to verify an external bank account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  required:
                    - personId
                    - linkId
                    - amount1
                    - amount2
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    linkId:
                      $ref: ./models/LinkId.yaml
                    amount1:
                      type: integer
                      description: Trial deposit amount 1
                      format: float
                    amount2:
                      type: integer
                      description: Trial deposit amount 2
                      format: float
              required:
                - requestHeader
                - requestDetails
      tags:
        - Banks
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/recipients:
    post:
      summary: recipients
      operationId: post-baas-v1-recipients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    properties:
                      linkId:
                        $ref: ./models/LinkId.yaml
                      recipientResponseData:
                        $ref: ./models/RecipientResponseData.yaml
                required:
                  - responseHeader
      description: Add recipients for remittances and P2P
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  properties:
                    recipientType:
                      type: string
                      description: persontoperson or remittance recipient. See Recipient Types for Values
                      maxLength: 64
                      enum:
                        - personToPerson
                        - remittance
                    personId:
                      $ref: ./models/PersonId.yaml
                    recipientPersonId:
                      $ref: ./models/PersonId.yaml
                    recipientConfirmationCode:
                      type: string
                      maxLength: 64
                      description: Last four of the recipient phonenumber or other confirmation code. CONDITIONAL FIELD. Required ONLY if this is persontoperson transfer
                    encryptedRecipientPrivatePersonData:
                      $ref: ./models/EncryptedData.yaml
                  required:
                    - recipientType
                    - personId
                    - recipientConfirmationCode
              required:
                - requestHeader
      tags:
        - Persons
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/getpersons:
    post:
      summary: getpersons
      operationId: post-baas-v1-getpersons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: ''
                x-examples:
                  example-1:
                    responseHeader:
                      responseId: eb40ea6c-7b53-4bf7-ad38-a4d63f76ee47
                      responseCode: string
                      responseSubCode: string
                      responseMessage: string
                    responseDetails: {}
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      personData:
                        $ref: ./models/PrivatePersonData.yaml
                required:
                  - responseHeader
                  - responseDetails
              examples: {}
      description: 'GetPersons retrieves the details of the person, can be called any time after the persons API call'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  required:
                    - personId
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
              required:
                - requestHeader
                - requestDetails
      tags:
        - Persons
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/getlinks:
    post:
      summary: getlinks
      operationId: post-baas-v1-getlinks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      links:
                        type: array
                        description: array of linked resources
                        items:
                          $ref: ./models/Links.yaml
                required:
                  - responseHeader
      description: Get the resources linked to the person
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  required:
                    - personId
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
              required:
                - requestHeader
                - requestDetails
      tags:
        - Links
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/removelinks:
    post:
      summary: removelinks
      operationId: post-baas-v1-removelinks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                required:
                  - responseHeader
      description: Removed the linked resource tied to a person
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    linkId:
                      $ref: ./models/LinkId.yaml
                  required:
                    - personId
                    - linkId
              required:
                - requestHeader
        description: ''
      tags:
        - Links
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/transactions:
    post:
      summary: transactions
      operationId: post-baas-v1-transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    required:
                      - transactionId
                      - transactionDate
                      - transactionStatusReason
                    properties:
                      transactionId:
                        type: string
                        maxLength: 36
                        minLength: 36
                        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                      transactionDate:
                        type: string
                        maxLength: 128
                        description: UTC transaction date
                      transactionStatusReason:
                        type: string
                        maxLength: 256
                        description: 'Transaction status reason. Provides more details on the status '
                        enum:
                          - completed
                          - pending
                          - hold
                          - failed
                          - rejected
                      transactionRefId:
                        type: string
                        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                        minLength: 36
                        maxLength: 36
                        description: Unique reference identifier for this transfer.
                required:
                  - responseHeader
                  - responseDetails
      description: "Transactions API can be used for the following types of transactions:\n\n•\tRemittance – Remit money to persons overseas \n\n•\tBanks – Transfer funds IN and OUT of banks\n\n•\tP2P - Transfer money to other persons\n\nCalls to this API are idempotent. Retry attempts with the same requestId will not initiate new transactions but rather return the same transaction results. Certain errors codes can be retried until the return of a transaction response."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  required:
                    - personId
                    - transactionId
                    - transactionComponents
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    transactionId:
                      type: string
                      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                      maxLength: 36
                      minLength: 36
                      description: 'Unique identifier for this transaction. '
                    transactionComponents:
                      type: array
                      description: 'One of more transfer components. For split fund transfers there''ll be more than on component '
                      items:
                        $ref: ./models/TransactionComponents.yaml
              required:
                - requestHeader
                - requestDetails
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: ../reference/BaaS-oAuth.yaml#/components/parameters/Authorization
    parameters: []
  /baas/v1/gettransactions:
    post:
      summary: gettransactions
      operationId: post-baas-v1-gettransactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetail:
                    type: object
                    properties:
                      personId:
                        $ref: ./models/PersonId.yaml
                      fromDate:
                        type: string
                        maxLength: 128
                        description: UTC from date
                      emdDate:
                        type: string
                        maxLength: 128
                        description: UTC End date
                      startingBalance:
                        type: integer
                        description: Starting balance
                      endingBalance:
                        type: integer
                        description: Ending balance
                      feesYTD:
                        type: integer
                        description: Amount of fees incurred year to date
                      feesPrevCalendarMonth:
                        type: integer
                        description: Amount of fees incurred during the previous calendar month
                      transactionComponents:
                        $ref: ./models/TransactionDetails.yaml
      description: Gets transactions tied to the person
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    fromDate:
                      type: string
                      maxLength: 128
                      description: UTC from date
                    endDate:
                      type: string
                      maxLength: 128
                      description: UTC end date
                    lastStatement:
                      type: string
                      maxLength: 1
                      description: Y will pull transactions from last statement date.
                  required:
                    - personId
              required:
                - requestHeader
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/recurringtransfers:
    post:
      summary: recurringtransfers
      operationId: post-baas-v1-recurringtransactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    properties:
                      recurrenceId:
                        type: string
                        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                        maxLength: 36
                        minLength: 36
                        description: |
                          recurrence transfer identifier 
                      transactionDate:
                        type: string
                        maxLength: 128
                        description: UTC date the recurrence transaction was created/updated
                      transactionStatus:
                        type: string
                        maxLength: 256
                        description: See Transaction Status Types for values
                        enum:
                          - completed
                          - pending
                          - hold
                          - failed
                          - rejected
                      transactionStatusReason:
                        type: string
                        description: 'Transactions status reason. Provides more details on the status '
                        maxLength: 256
                    required:
                      - recurrenceId
                      - transactionDate
                      - transactionStatus
                required:
                  - responseHeader
      description: "Recurring Trasfers API can be used for the scheduling and updating scheduled transfers authorized by the person:\n\n•\tBalanceThreshold\n\nCalls to this API are idempotent. Retry attempts with the same requestId will not initiate new transactions but rather return the same transaction results. Certain errors codes can be retried until the return of a transaction response.\n"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  required:
                    - personId
                    - recurrenceDetails
                    - transactionComponents
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    recurrenceDetails:
                      $ref: ./models/RecurrenceDetails.yaml
                    transactionComponents:
                      $ref: ./models/TransactionComponents.yaml
              required:
                - requestHeader
                - requestDetails
      tags:
        - Transactions
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/getrecurringtransfers:
    post:
      summary: getrecurringtransfers
      tags:
        - Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    properties:
                      recurrenceDetails:
                        $ref: ./models/RecurrenceDetails.yaml
                      transactionComponents:
                        $ref: ./models/TransactionComponents.yaml
                required:
                  - responseHeader
      operationId: get-baas-v1-getrecurrencetransactions
      description: 'Get Recurring Transfers API scheduled by the person:'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  properties:
                    personId:
                      $ref: ./models/PersonId.yaml
                    recurrenceId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                      description: 'Unique identifier of the recurring transfer '
                  required:
                    - personId
              required:
                - requestHeader
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/getterms:
    post:
      summary: getterms
      tags:
        - Terms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    additionalProperties: false
                    properties:
                      termsIdentifierType:
                        type: string
                        maxLength: 64
                        description: The terms identifier type. See terms identifier type for values
                        enum:
                          - CA
                          - TS
                          - PP
                      terms:
                        type: string
                        description: Terms Text
                        readOnly: true
                required:
                  - responseHeader
      operationId: get-baas-v1-getterms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  required:
                    - termsIdentifierType
                  properties:
                    termsIdentifierType:
                      type: string
                      maxLength: 64
                      description: The terms identifier type. See terms identifier type for values
              required:
                - requestHeader
                - requestDetails
      description: Gets user terms text
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/getlocations:
    post:
      summary: getlocations
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    properties:
                      locations:
                        type: array
                        items:
                          $ref: ./models/Locations.yaml
                required:
                  - responseHeader
      operationId: get-baas-v1-getlocations
      description: 'Gets locations for retailers, ATM locations'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  additionalProperties: false
                  properties:
                    latitude:
                      type: string
                      maxLength: 36
                      description: Latitude coordinate
                    longitude:
                      type: string
                      maxLength: 36
                      description: 'Longitude coordinate  '
                    locationType:
                      type: string
                      maxLength: 128
                      description: Location types
                      enum:
                        - ATM
                        - retailer
                    distance:
                      type: string
                      maxLength: 3
                      description: search radius in miles
                    searchCount:
                      type: string
                      maxLength: 3
                      description: 'If empty, first 25 locations will be returned'
                  required:
                    - latitude
                    - longitude
                    - locationType
                    - distance
              required:
                - requestHeader
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
  /baas/v1/getevents:
    post:
      summary: getevents
      operationId: post-baas-v1-getevents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  responseHeader:
                    $ref: ./models/ResponseHeader.yaml
                  responseDetails:
                    type: object
                    properties:
                      events:
                        type: array
                        items:
                          $ref: ./models/Events.yaml
      description: Gets a notification Event for a given event id or all events for a specified date range
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestHeader:
                  $ref: ./models/RequestHeader.yaml
                requestDetails:
                  type: object
                  description: UUID of the event
                  properties:
                    eventId:
                      type: string
                      description: 'Conditional. retrieve event based on a specific eventid  '
                      minLength: 36
                      maxLength: 36
                      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                    types:
                      type: string
                      maxLength: 1024
                      description: Conditional.comma seperated event types
                    limit:
                      type: number
                      description: Number of events in the response. Default is 20
                    replayBeforeDt:
                      type: string
                      maxLength: 128
                      description: 'Conditional. Date and time in UTC, replays events before the timestamp specified'
                    replayAfterDt:
                      type: string
                      maxLength: 128
                      description: 'Conditional.Date and time in UTC, replays events after the timestamp specified'
                    replayBeforeId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      description: Conditional. UUID of the event before which you want to replay the events
                      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                    replayAfterId:
                      type: string
                      maxLength: 36
                      minLength: 36
                      description: Conditional. UUID of the event after which you want to replay the events
                      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
                    deliveryFlag:
                      type: boolean
                      description: 'Conditional.If true, will filter events that were successfully delivered. Replay all events if false'
              required:
                - requestHeader
      tags:
        - Events
      parameters:
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/Authorization'
    parameters: []
components:
  schemas: {}
  securitySchemes: {}
  parameters:
    contentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        example: application/json
      description: application/json
    Authorization:
      name: Authorization
      in: header
      schema:
        type: string
        example: Bearer eyJraWQiOiJwWFhJNXZ3amxcL0NhYURJa2JvanpIeE5CRkpTT29mRVAzdDBvSjV5Y2tDbz0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1NWt2N3JrMGhjNHY1ZnExYWFtaDRnOWswZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiaHR0cHM6XC9cL2JhYXMtZGV2LnBheWZvcndhcmQuY29tXC9hbGwiLCJhdXRoX3RpbWUiOjE2MjYyMjUzMzQsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xXzBmY0htcEJsUyIsImV4cCI6MTYyNjMxMTczNCwiaWF0IjoxNjI2MjI1MzM0LCJ2ZXJzaW9uIjoyLCJqdGkiOiI3MWExMjhlNS04M2E4LTRjYzUtODhlZC0yYmQ4OGNiOGE5MGEiLCJjbGllbnRfaWQiOiI1NWt2N3JrMGhjNHY1ZnExYWFtaDRnOWswZiJ9.OEHQkITWcwRMxN3c0gey2sv4mvY-7sfGRWEBKYjMbSO84qs-cCMPtxcej-0j7SLkKLJQHYSNcljt1LW-DxzWsjb9watMR_1Ml_mCmGIPNeH_ow3_Qa8Cr70OVesxCk_y5xDc5dRt6vhN0h9pOPLeSB2KzANVSrnIGxxeBv8sHNIQp9HV_dT1CvAHlQdyzqKBaXaoM61StLYLzzHq8MV8Y4xHRPWsScLU-s3XmjZn-oFWYn_mCWs57_wsFBrDJsp445aYQEPLYUL4m2OkiVRAXn81ks2Z_SVbtI2slL7sR86ooc5WrP1y6zFgZQQETFP79fX_OjfDvNX3yjt0WjxWQA
      required: true
      description: 'Bearer {token}'
  responses: {}
  examples: {}
tags:
  - name: Banks
  - name: Cards
  - name: Events
  - name: Links
  - name: Locations
  - name: Models
  - name: oAuth
  - name: Persons
  - name: Terms
  - name: Transactions
